<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/batch"  
    xmlns:beans="http://www.springframework.org/schema/beans" xmlns:bean="http://www.springframework.org/schema/beans"  
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"  
    xsi:schemaLocation="http://www.springframework.org/schema/beans   
    http://www.springframework.org/schema/beans/spring-beans.xsd  
    http://www.springframework.org/schema/batch  
    http://www.springframework.org/schema/batch/spring-batch-2.1.xsd">  
    
    
    <bean:bean id="jobRepository"  
        class="org.springframework.batch.core.repository.support.MapJobRepositoryFactoryBean">  
        <bean:property name="transactionManager" ref="transactionManager" />  
    </bean:bean>  
    <bean:bean id="transactionManager"  
        class="org.springframework.batch.support.transaction.ResourcelessTransactionManager">  
    </bean:bean>  
    <bean:bean id="jobLauncher"  
        class="org.springframework.batch.core.launch.support.SimpleJobLauncher">  
        <bean:property name="jobRepository" ref="jobRepository" />  
    </bean:bean>  
   
    <bean:bean id="begin" class="com.vimi.lai.tasklet.MyFirstTasklet" scope="step">  
    </bean:bean>  
    <bean:bean id="itemProcessor" class="com.mkyong.CustomItemProcessor" />
    <bean:bean id="itemWriter" class="com.mkyong.CustomItemWriter" />
    <job id="ioSampleJob">  
        <step id="step1">  
            <tasklet >
            	<chunk reader="productReader" processor="itemProcessor" writer="itemWriter" commit-interval="10">	</chunk>
            </tasklet>  
        </step>  
    </job>  
   
    <bean:bean id="productReader" class="org.springframework.batch.item.file.FlatFileItemReader" scope="step">
    	<bean:property  name="resource" value="classpath:/input/report.csv"></bean:property> 

		<bean:property name="lineMapper">
			<bean:bean class="org.springframework.batch.item.file.mapping.DefaultLineMapper">
				<bean:property name="lineTokenizer">
					<bean:bean
						class="org.springframework.batch.item.file.transform.DelimitedLineTokenizer">
						<bean:property name="names" value="id,sales,qty,staffName,date" />
					</bean:bean>
				</bean:property>
				<bean:property name="fieldSetMapper">
				    <bean:bean class="com.mkyong.ReportFieldSetMapper" />
				    
				    <!-- if no data type conversion, use BeanWrapperFieldSetMapper to map by name
					<bean
						class="org.springframework.batch.item.file.mapping.BeanWrapperFieldSetMapper">
						<property name="prototypeBeanName" value="report" />
					</bean>
					 -->
				</bean:property>
			</bean:bean>
		</bean:property>
     </bean:bean>
     <!-- <bean:bean id="xmlItemWriter" class="org.springframework.batch.item.xml.StaxEventItemWriter">
		<bean:property name="resource" value="file:xml/outputs/report.xml" />
		<bean:property name="marshaller" ref="reportMarshaller" />
		<bean:property name="rootTagName" value="report" />
	</bean:bean>

	<bean:bean id="reportMarshaller" class="org.springframework.oxm.jaxb.Jaxb2Marshaller">
		<bean:property name="classesToBeBound">
			<bean:list>
				<bean:value>com.mkyong.model.Report</bean:value>
			</bean:list>
		</bean:property>
	</bean:bean> -->
</beans:beans>  